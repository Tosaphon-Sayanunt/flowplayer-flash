/* * Author: Thomas Dubois, <thomas _at_ flowplayer org> * This file is part of Flowplayer, http://flowplayer.org * * Copyright (c) 2011 Flowplayer Ltd * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.ui.buttons {	    import flash.display.DisplayObjectContainer;	import flash.events.MouseEvent;    import org.flowplayer.view.AnimationEngine;    import org.flowplayer.view.Flowplayer;		import org.flowplayer.ui.buttons.TooltipButtonConfig;	import org.flowplayer.volume.ui.Volume;		import flash.external.*;	/**	 * @author api	 */	public class VolumeTooltipButton extends GenericTooltipButton {		public var isOpenVolume:Boolean;		private var _volume:Volume;				public function VolumeTooltipButton(face:DisplayObjectContainer, config:TooltipButtonConfig, animationEngine:AnimationEngine, player:Flowplayer, volume:Volume) {			_volume = volume;			super(face,config, animationEngine,player);		}        override protected function onMouseOut(event:MouseEvent = null):void {        		if(isOpenVolume) {        			super.onMouseOut(event);				//ExternalInterface.call("thaitv.thaiTVHideVolume");				//ExternalInterface.call("console.log", "onMouseOut");				_volume.setTimeoutDock();
        		}                    }        override protected function onMouseOver(event:MouseEvent):void {        		//if(!isOpenVolume) {            		super.onMouseOver(event);            //}            ExternalInterface.call("console.log", "onMouseOver");            _volume.clearTimer();            _volume.updateModelProp("display", "block");             _player.animationEngine.fadeTo(_volume, 0.7);                             this.hideTooltip();                this.isOpenVolume = true;                ExternalInterface.call("thaitv.setControlAutohide", false);//            //this.parent.parent.parent.parent = controlbar//            //this.parent.parent = volume icon//            //ExternalInterface.call("thaitv.thaiTVShowVolume", this.parent.parent.parent.parent.x + this.parent.parent.x);                                }	}}