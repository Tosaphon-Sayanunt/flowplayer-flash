/* * Author: Thomas Dubois, <thomas _at_ flowplayer org> * This file is part of Flowplayer, http://flowplayer.org * * Copyright (c) 2011 Flowplayer Ltd * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.controls.controllers {    	import org.flowplayer.controls.Controlbar;	import org.flowplayer.controls.SkinClasses;	import org.flowplayer.model.ClipEvent;		import org.flowplayer.ui.controllers.AbstractButtonController;	import org.flowplayer.ui.buttons.ButtonEvent;	import org.flowplayer.view.Flowplayer;	import flash.display.DisplayObjectContainer;	import org.flowplayer.ui.buttons.BitrateTooltipButton;	import org.flowplayer.ui.buttons.TooltipButtonConfig;	import org.flowplayer.ui.buttons.BitrateToggleButton;	import flash.external.*;		public class BitrateButtonController extends AbstractButtonController {				public function BitrateButtonController() {			super();						ExternalInterface.addCallback("sendBitrateType", bitrateSetFromJS);		}				override protected function createWidget():void {						var normalButton:BitrateTooltipButton = new BitrateTooltipButton( 												new normalFaceClass(), 												_config as TooltipButtonConfig, 												_player.animationEngine);            setAccessible(normalButton, "bitrate-normal");																		var hdButton:BitrateTooltipButton = new BitrateTooltipButton(												new hdFaceClass(), 												_config as TooltipButtonConfig, 												_player.animationEngine);            setAccessible(hdButton,  "bitrate-hd");						_widget = new BitrateToggleButton(normalButton, hdButton);					}				override public function get name():String {			return "Bitrate";		}				override public function get defaults():Object {			return {				tooltipEnabled: false,				tooltipLabel: "Bitrate Selection",				visible: true,				enabled: true			};		}		public function get normalFaceClass():Class {			return SkinClasses.getClass("fp.BitrateButton");		}				public function get hdFaceClass():Class {			return SkinClasses.getClass("fp.BitrateHDButton");		}				override protected function onButtonClicked(event:ButtonEvent):void {					}				private function bitrateSetFromJS(bType:Number):void {            (_widget as BitrateToggleButton).bitrateType = bType;        }	}}